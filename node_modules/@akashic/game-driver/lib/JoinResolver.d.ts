import * as pl from "@akashic/playlog";
import * as amf from "@akashic/amflow";
import * as g from "@akashic/akashic-engine";
export declare class JoinLeaveRequest {
    joinResolver: JoinResolver;
    pev: pl.Event;
    resolved: boolean;
    constructor(pev: pl.Event, joinResolver: JoinResolver, amflow?: amf.AMFlow, keys?: g.StorageKey[]);
    _onGotStorageData(err: Error | null, sds?: pl.StorageData[]): void;
}
export interface JoinResolverParameterObject {
    amflow: amf.AMFlow;
    errorHandler?: (err: any) => void;
    errorHandlerOwner?: any;
}
export declare class JoinResolver {
    errorTrigger: g.Trigger<any>;
    _amflow: amf.AMFlow;
    _keysForJoin: pl.StorageKey[];
    _requested: JoinLeaveRequest[];
    constructor(param: JoinResolverParameterObject);
    request(pev: pl.Event): void;
    readResolved(): pl.Event[];
    setRequestValuesForJoin(keys: pl.StorageKey[]): void;
}
