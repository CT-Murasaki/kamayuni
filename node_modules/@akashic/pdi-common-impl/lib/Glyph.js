"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Glyph = void 0;
/**
 * グリフ。
 *
 * @deprecated 非推奨である。将来的に削除される予定である。
 */
var Glyph = /** @class */ (function () {
    /**
     * `Glyph` のインスタンスを生成する。
     * @deprecated 非推奨である。将来的に削除される予定である。
     */
    function Glyph(code, x, y, width, height, offsetX, offsetY, advanceWidth, surface, isSurfaceValid) {
        if (offsetX === void 0) { offsetX = 0; }
        if (offsetY === void 0) { offsetY = 0; }
        if (advanceWidth === void 0) { advanceWidth = width; }
        if (isSurfaceValid === void 0) { isSurfaceValid = !!surface; }
        this.code = code;
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.offsetX = offsetX;
        this.offsetY = offsetY;
        this.advanceWidth = advanceWidth;
        this.surface = surface;
        this.isSurfaceValid = isSurfaceValid;
        this._atlas = null;
    }
    /**
     * グリフの描画上の幅を求める。
     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。
     * @param fontSize フォントサイズ
     */
    Glyph.prototype.renderingWidth = function (fontSize) {
        if (!this.width || !this.height) {
            return 0;
        }
        return (fontSize / this.height) * this.width;
    };
    return Glyph;
}());
exports.Glyph = Glyph;
