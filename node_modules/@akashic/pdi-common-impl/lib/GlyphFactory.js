"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlyphFactory = void 0;
/**
 * グリフファクトリ。
 *
 * `DynamicFont` はこれを利用してグリフを生成する。
 *
 * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。
 */
var GlyphFactory = /** @class */ (function () {
    /**
     * `GlyphFactory` を生成する。
     *
     * @param fontFamily フォントファミリ。フォント名、またはそれらの配列
     * @param fontSize フォントサイズ
     * @param baselineHeight ベースラインの高さ
     * @param strokeWidth 輪郭幅
     * @param strokeColor 輪郭色
     * @param strokeOnly 輪郭を描画するか否か
     * @param fontWeight フォントウェイト
     */
    function GlyphFactory(fontFamily, fontSize, baselineHeight, fontColor, strokeWidth, strokeColor, strokeOnly, fontWeight) {
        if (baselineHeight === void 0) { baselineHeight = fontSize; }
        if (fontColor === void 0) { fontColor = "black"; }
        if (strokeWidth === void 0) { strokeWidth = 0; }
        if (strokeColor === void 0) { strokeColor = "black"; }
        if (strokeOnly === void 0) { strokeOnly = false; }
        if (fontWeight === void 0) { fontWeight = "normal"; }
        this.fontFamily = fontFamily;
        this.fontSize = fontSize;
        this.fontWeight = fontWeight;
        this.baselineHeight = baselineHeight;
        this.fontColor = fontColor;
        this.strokeWidth = strokeWidth;
        this.strokeColor = strokeColor;
        this.strokeOnly = strokeOnly;
    }
    return GlyphFactory;
}());
exports.GlyphFactory = GlyphFactory;
